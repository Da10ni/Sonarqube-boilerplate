name: Quality Data Consolidation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM UTC
  workflow_dispatch:

env:
  BUILD_NUMBER: ${{ github.run_number }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_SHA: ${{ github.sha }}

jobs:
  quality-analysis:
    name: Collect & Organize Quality Data
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Collect test data and coverage
        run: |
          mvn clean test
          mvn site:site

      - name: Organize quality metrics
        run: |
          mkdir -p target/quality-reports
          TEST_FILES=$(find src/test -name "*.java" | wc -l)
          TEST_METHODS=$(grep -r "@Test" src/test --include="*.java" | wc -l)
          SOURCE_FILES=$(find src/main -name "*.java" | wc -l)
          SOURCE_LINES=$(find src/main -name "*.java" -exec wc -l {} + | tail -1 | awk '{print $1}')

          echo "Build Number: ${BUILD_NUMBER}" > target/quality-reports/metrics.txt
          echo "Commit SHA: ${GITHUB_SHA}" >> target/quality-reports/metrics.txt
          echo "Date: $(date -u)" >> target/quality-reports/metrics.txt
          echo "Source Files: ${SOURCE_FILES}" >> target/quality-reports/metrics.txt
          echo "Source Lines: ${SOURCE_LINES}" >> target/quality-reports/metrics.txt
          echo "Test Files: ${TEST_FILES}" >> target/quality-reports/metrics.txt
          echo "Test Methods: ${TEST_METHODS}" >> target/quality-reports/metrics.txt

      - name: SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn -B sonar:sonar \
            -Dsonar.projectKey=sonarqube-testing \
            -Dsonar.projectName='sonarqube-testing' \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.junit.reportPaths=target/surefire-reports \
            -Dsonar.java.binaries=target/classes \
            -Dsonar.qualitygate.wait=true \
            -Dsonar.qualitygate.timeout=300 \
            -Dsonar.analysis.buildNumber=${BUILD_NUMBER} \
            -Dsonar.analysis.repository=${GITHUB_REPOSITORY} \
            -Dsonar.analysis.sha1=${GITHUB_SHA}

      - name: Upload quality artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quality-reports-${{ github.run_number }}
          path: |
            target/quality-reports/
            target/site/jacoco/
            target/surefire-reports/
          retention-days: 30

      - name: Summary
        run: |
          echo "### ðŸ“Š Quality Data Consolidation Complete" >> $GITHUB_STEP_SUMMARY
          echo "- Source files and lines of code" >> $GITHUB_STEP_SUMMARY
          echo "- Test coverage and test count" >> $GITHUB_STEP_SUMMARY
          echo "- Code quality issues and ratings" >> $GITHUB_STEP_SUMMARY
