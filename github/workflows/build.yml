name: Build and Test

on:
  push:
    branches: [ main, master ]  # Support both main and master
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Manual trigger

jobs:
  test-and-sonar:
    name: Test and SonarQube Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones disabled for better relevancy of analysis
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          
      - name: Verify installation
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          npm list --depth=0
        
      - name: Run tests with coverage
        run: |
          npm run test:coverage
          echo "Coverage files generated:"
          ls -la coverage/ || echo "No coverage directory found"
          
      - name: Verify coverage files
        run: |
          if [ -f "coverage/lcov.info" ]; then
            echo "✅ Coverage file found"
            echo "Coverage file size: $(wc -l < coverage/lcov.info) lines"
          else
            echo "❌ Coverage file missing"
            exit 1
          fi
        
      - name: Build project
        run: npm run build
        
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Install SonarQube Scanner
        run: |
          npm install -g sonarqube-scanner
          
      - name: Run SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "Starting SonarQube analysis..."
          echo "SonarQube URL: $SONAR_HOST_URL"
          echo "Project Key: react-sonarqube-testing"
          
          # Check if sonar-scanner is available
          which sonar-scanner || echo "SonarQube scanner not found in PATH"
          
          # Run analysis with verbose output
          sonar-scanner \
            -Dsonar.projectKey=Sonarqube-testing \
            -Dsonar.projectName='Sonarqube-Testing' \
            -Dsonar.sources=src \
            -Dsonar.tests=src \
            -Dsonar.test.inclusions='**/*.test.jsx,**/*.test.js,**/*.spec.jsx,**/*.spec.js' \
            -Dsonar.exclusions='**/node_modules/**,**/dist/**,**/coverage/**,**/*.config.js,**/*.config.ts,**/public/**' \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.verbose=true
            
      - name: Add SonarQube Summary
        if: always()
        run: |
          echo "### 🔍 SonarQube Analysis Complete" >> $GITHUB_STEP_SUMMARY
          echo "- [📊 View Report in SonarQube](${{ secrets.SONAR_HOST_URL }}/dashboard?id=react-sonarqube-testing)" >> $GITHUB_STEP_SUMMARY
          echo "- Tests: $(find coverage -name 'lcov.info' -exec wc -l {} \; | awk '{print $1}') lines covered" >> $GITHUB_STEP_SUMMARY